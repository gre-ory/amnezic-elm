var _gre_ory$amnezic_elm$View$render_question = F2(
	function (question_index, question) {
		var classes = _elm_lang$core$Native_Utils.eq(question_index, 1) ? 'question first' : 'question';
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(question.title),
				_1: {ctor: '[]'}
			});
	});
var _gre_ory$amnezic_elm$View$render_questions = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('questions'),
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Array$toList(
			A2(_elm_lang$core$Array$indexedMap, _gre_ory$amnezic_elm$View$render_question, model.questions)));
};
var _gre_ory$amnezic_elm$View$render_setup_player = F2(
	function (player_id, player) {
		var classes = _elm_lang$core$Native_Utils.eq(player_id, 1) ? 'player first' : 'player';
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(player_id),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' -- ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								player.name,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' -- ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(player.score),
										' -- ')))))),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('player name'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(
									_gre_ory$amnezic_elm$Type$UpdatePlayerName(player_id)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(player.name),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _gre_ory$amnezic_elm$View$render_next_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToNextPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('next'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_previous_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToPreviousPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('previous'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_start_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToStartPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('start'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_footer = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('@amnezic'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_header = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _gre_ory$amnezic_elm$View$render_start_button(model),
			_1: {
				ctor: '::',
				_0: _gre_ory$amnezic_elm$View$render_previous_button(model),
				_1: {
					ctor: '::',
					_0: _gre_ory$amnezic_elm$View$render_next_button(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _gre_ory$amnezic_elm$View$render_setup_players = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _gre_ory$amnezic_elm$View$render_header(model),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$fieldset,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page set-up-players'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('players'),
								_1: {ctor: '[]'}
							},
							_elm_lang$core$Array$toList(
								A2(_elm_lang$core$Array$indexedMap, _gre_ory$amnezic_elm$View$render_setup_player, model.players))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _gre_ory$amnezic_elm$View$render_footer(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _gre_ory$amnezic_elm$View$render_default_page = F3(
	function (model, page_class, page_content) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _gre_ory$amnezic_elm$View$render_header(model),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$fieldset,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'page ', page_class)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(page_content),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _gre_ory$amnezic_elm$View$render_footer(model),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _gre_ory$amnezic_elm$View$render_page = function (model) {
	var _p0 = model.page;
	switch (_p0.ctor) {
		case 'PageStart':
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'start', 'start: not yet implemented...');
		case 'PageSetUpPlayers':
			return _gre_ory$amnezic_elm$View$render_setup_players(model);
		case 'PageSetUpThemes':
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'set-up-themes', 'set-up themes: not yet implemented...');
		case 'PageSetUpQuestions':
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'set-up-questions', 'set-up questions: not yet implemented...');
		case 'PageQuestions':
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'questions', 'questions: not yet implemented...');
		case 'PageScore':
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'score', 'score: not yet implemented...');
		default:
			return A3(_gre_ory$amnezic_elm$View$render_default_page, model, 'end', 'end: not yet implemented...');
	}
};
