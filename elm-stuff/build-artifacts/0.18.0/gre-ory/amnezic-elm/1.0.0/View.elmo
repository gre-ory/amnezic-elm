var _gre_ory$amnezic_elm$View$render_choice = F2(
	function (choice_id, choice) {
		var classes = choice.correct ? 'choice correct' : 'choice distractor';
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$fieldset,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(choice.answer),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$fieldset,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(choice.hint),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$fieldset,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(choice.correct)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _gre_ory$amnezic_elm$View$render_question = F2(
	function (question_id, question) {
		var classes = _elm_lang$core$Native_Utils.eq(question_id, 1) ? 'question first' : 'question';
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$fieldset,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(question.theme),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$fieldset,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(question.audio),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$fieldset,
							{ctor: '[]'},
							_elm_lang$core$Array$toList(
								A2(_elm_lang$core$Array$indexedMap, _gre_ory$amnezic_elm$View$render_choice, question.choices))),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _gre_ory$amnezic_elm$View$myStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _gre_ory$amnezic_elm$View$render_player = F2(
	function (player_id, player) {
		var classes = _elm_lang$core$Native_Utils.eq(player_id, 1) ? 'player first' : 'player';
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(classes),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(player_id),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' -- ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								player.name,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' -- ',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(player.score),
										' -- ')))))),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('player name'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(
									_gre_ory$amnezic_elm$Type$UpdatePlayerName(player_id)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(player.name)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _gre_ory$amnezic_elm$View$render_players = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		_elm_lang$core$Array$toList(
			A2(_elm_lang$core$Array$indexedMap, _gre_ory$amnezic_elm$View$render_player, model.players)));
};
var _gre_ory$amnezic_elm$View$render_error = function (message) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_questions = function (model) {
	var _p0 = A2(_elm_lang$core$Array$get, model.question_id, model.questions);
	if (_p0.ctor === 'Just') {
		return A2(_gre_ory$amnezic_elm$View$render_question, model.question_id, _p0._0);
	} else {
		return _gre_ory$amnezic_elm$View$render_error('unknown question!');
	}
};
var _gre_ory$amnezic_elm$View$render_next_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToNextPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('next'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_previous_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToPreviousPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('previous'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_start_button = function (model) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_gre_ory$amnezic_elm$Type$GoToStartPage(model)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('start'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_footer = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('@amnezic'),
			_1: {ctor: '[]'}
		});
};
var _gre_ory$amnezic_elm$View$render_header = function (model) {
	return A2(
		_elm_lang$html$Html$fieldset,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _gre_ory$amnezic_elm$View$render_start_button(model),
			_1: {
				ctor: '::',
				_0: _gre_ory$amnezic_elm$View$render_previous_button(model),
				_1: {
					ctor: '::',
					_0: _gre_ory$amnezic_elm$View$render_next_button(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _gre_ory$amnezic_elm$View$render_page_skeleton = F3(
	function (model, page_id, html_content) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _gre_ory$amnezic_elm$View$render_header(model),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$fieldset,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class(
								A2(_elm_lang$core$Basics_ops['++'], 'page ', page_id)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: html_content,
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _gre_ory$amnezic_elm$View$render_footer(model),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _gre_ory$amnezic_elm$View$render_default_page = F2(
	function (model, page_id) {
		return A3(
			_gre_ory$amnezic_elm$View$render_page_skeleton,
			model,
			page_id,
			_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'page ',
					A2(_elm_lang$core$Basics_ops['++'], page_id, ' not yet implemented!'))));
	});
var _gre_ory$amnezic_elm$View$render_players_page = F2(
	function (model, page_id) {
		return A3(
			_gre_ory$amnezic_elm$View$render_page_skeleton,
			model,
			page_id,
			_gre_ory$amnezic_elm$View$render_players(model));
	});
var _gre_ory$amnezic_elm$View$render_questions_page = F2(
	function (model, page_id) {
		return A3(
			_gre_ory$amnezic_elm$View$render_page_skeleton,
			model,
			page_id,
			_gre_ory$amnezic_elm$View$render_questions(model));
	});
var _gre_ory$amnezic_elm$View$render_page = function (model) {
	var _p1 = model.page;
	switch (_p1.ctor) {
		case 'PageStart':
			return A2(_gre_ory$amnezic_elm$View$render_default_page, model, 'start');
		case 'PageThemes':
			return A2(_gre_ory$amnezic_elm$View$render_default_page, model, 'themes');
		case 'PagePlayers':
			return A2(_gre_ory$amnezic_elm$View$render_players_page, model, 'players');
		case 'PageQuestions':
			return A2(_gre_ory$amnezic_elm$View$render_questions_page, model, 'questions');
		case 'PageScore':
			return A2(_gre_ory$amnezic_elm$View$render_default_page, model, 'score');
		default:
			return A2(_gre_ory$amnezic_elm$View$render_default_page, model, 'end');
	}
};
